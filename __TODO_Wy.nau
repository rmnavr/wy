
// Docs ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾\ {{{1

	Phylosofical:
		- HyWy only changes syntax, nothing more.
		- All HyExt is done in HyLang.

	Syntax Rules:
		- only ONE L/C/: has special recognition at line beginning; need more? use new lines punk
		- inline L/C/: has different meaning

// ____________________________________________________________________________/ }}}1

	fptk: smul, lmul

	запятая реально нужна:
	print
		+ 3 4 , * 3 5 , / 12 14
		
	splitters precedence order I guess:
	- ,
	- $
	- ::
	- : 


	.arg  -> should be \ marked ? no, method is of higher prior than attribute

	bad: «func $ L» will see «L» as linestarter (because currently after amarkers split, smarkers split is performed)

	doc:
		seen as smarker
		| seen as mmarker essentially
		↓ ↓ 
		: : pups

	colorcolumn: at tabs starts

    words to act as continuators:
    - self
    - None

    pups :: bubr
    pups
          :
            bubr

    sexp:
        <leader>wi
        move insert \
        tab through spaces and such (as indent marks)

	BIG BUG: LRiba is seen as L Riba lol
	BIG BUG: «$ : func» will be processed as linestarter (very bad)
   lmap : p> neg str $ : -> data lens_1	// bad: «:» requirement

	; TODO: reader macro
	fptk: [zeroQ negQ oddQ] $ 3 // or/and
	is it okey that pyparser keywords are not :normal_words1_only ? (so special chars cannot be used)
	TODO: python regex symbols

	↓
	#m: x	#m:
	-> strings and ;comments can contain any printable character

    side: Literal "12" "23"
    , joiner
    ; not the best name: hy_bracket_tokenQ (really it is hyopener + closer_bracket)
	
    // core grammar has no:
    // - linestarter lines with anything except linestarter
    // - applicator-markers
    // before parsing, wy-code is expanded into core grammar

	bug: ~@ is not added currently
	\ in mid ?
	allow \   x to start indend at \ ?

	new functionality:
		• «self» should be continuator?
		• $ :$ $$
		• fully-possible-one-line-syntax without parens, also , is str_join lol
		• nesting interaction: () : :: $ $$
		• save positions where on Preparation stage lines were splited? or make it properly recognized?
		• reader macroses recognition
		+ proper error messaging

		Later:
		+ L C can open new indent levels also at linemid?
		+ pass closing bracket through comments to actual line where it belongs

	Pretty-factoring:
		! CONSISTENT NAMINGS!!!!!!!!!!!!
		! Review all TODO parts of the code
		! Organize $MARKERS (+ correct ordering for regex/pyparsing)
		! «; comment» pyparser token will NOT recognize non WORD chars — поправить это
		+ insert_smart_indent should be done BEFORE split_linestarters (it makes no sense otherwise)

